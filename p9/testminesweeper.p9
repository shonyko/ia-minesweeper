% set(production).
set(arithmetic).
assign(max_models, -1).
assign(domain_size, 10).

formulas(rules_minesweeper).
% formulas(assumptions).
%help function for next position
% s(1)=2. s(2)=3. s(3)=4. s(4)=5. s(5)=6. s(6)=7. s(7)=8.
% p(1)=0. p(2)=1. p(3)=2. p(5)=4. p(6)=7. p(7)=6.

%rules
mine(x, y) = 1 | mine(x, y) = 0.
hint(x, y) != 0 -> mine(x, y) = 0.

%bording the map
all x mine(x, -1) = 0.
all x mine(x, 8) = 0.
all y mine(-1, y) = 0.
all y mine(8, y) = 0.

hint(x, y) != -1 -> hint(x, y) = mine(p(x), p(y)) + mine(x, p(y)) + mine(s(x), p(y)) + mine(p(x), y) + mine(s(x), y) + mine(p(x), s(y)) + mine(x, s(y)) + mine(s(x), s(y)).

mine(0, 0) = 0.
end_of_list.

% Ca sa demonstrezi ce vrei prin a nega!
% 

formulas(map_minesweeper).
hint(0, 0) = -1. hint(0, 1) = -1. hint(0, 2) = -1. hint(0, 3) = -1. hint(0, 4) = -1. hint(0, 5) = -1. hint(0, 6) = -1. hint(0, 7) = -1. 
hint(1, 0) = 2. hint(1, 1) = 2. hint(1, 2) = 2. hint(1, 3) = 1. hint(1, 4) = 1. hint(1, 5) = 1. hint(1, 6) = -1. hint(1, 7) = -1. 
hint(2, 0) = -1. hint(2, 1) = -1. hint(2, 2) = -1. hint(2, 3) = -1. hint(2, 4) = -1. hint(2, 5) = 1. hint(2, 6) = -1. hint(2, 7) = -1. 
hint(3, 0) = 1. hint(3, 1) = 1. hint(3, 2) = 1. hint(3, 3) = -1. hint(3, 4) = -1. hint(3, 5) = 1. hint(3, 6) = -1. hint(3, 7) = -1. 
hint(4, 0) = -1. hint(4, 1) = -1. hint(4, 2) = 1. hint(4, 3) = -1. hint(4, 4) = -1. hint(4, 5) = 1. hint(4, 6) = -1. hint(4, 7) = -1. 
hint(5, 0) = -1. hint(5, 1) = -1. hint(5, 2) = 1. hint(5, 3) = -1. hint(5, 4) = -1. hint(5, 5) = 1. hint(5, 6) = -1. hint(5, 7) = -1. 
hint(6, 0) = -1. hint(6, 1) = -1. hint(6, 2) = 1. hint(6, 3) = 1. hint(6, 4) = -1. hint(6, 5) = 1. hint(6, 6) = 2. hint(6, 7) = 2. 
hint(7, 0) = -1. hint(7, 1) = -1. hint(7, 2) = -1. hint(7, 3) = 1. hint(7, 4) = -1. hint(7, 5) = -1. hint(7, 6) = -1. hint(7, 7) = -1. 


end_of_list.

% formulas(goals).
% mine(0, 0) = 1.
% end_of_list.